#include <string>
#include <vector>

#include "reach_lib.hpp"
#include "safety_shield/human_reach.h"
#include "safety_shield/long_term_traj.h"
#include "safety_shield/motion.h"
#include "safety_shield/robot_reach.h"
#include "safety_shield/safety_shield.h"
#include "safety_shield/verify.h"

std::vector<reach_lib::Point> human_measurement_switching_scenario() {
  std::vector<reach_lib::Point> dummy_human_meas(23);
  dummy_human_meas[0] = reach_lib::Point(0.9786, -0.0677, 0.6853);
  dummy_human_meas[1] = reach_lib::Point(0.9761, 0.0695, 0.6861);
  dummy_human_meas[2] = reach_lib::Point(0.9985, 0.0043, 0.8856);
  dummy_human_meas[3] = reach_lib::Point(0.96604109, -0.1252712, 0.31314464);
  dummy_human_meas[4] = reach_lib::Point(0.97470588, 0.12881263, 0.30618893);
  dummy_human_meas[5] = reach_lib::Point(0.99739245, -0.00121013, 1.02079953);
  dummy_human_meas[6] = reach_lib::Point(1.02637714, -0.08770052, -0.0811226);
  dummy_human_meas[7] = reach_lib::Point(1.02725967, 0.08968268, -0.08937198);
  dummy_human_meas[8] = reach_lib::Point(0.97197308, -0.00261079, 1.0736902);
  dummy_human_meas[9] = reach_lib::Point(0.90453041, -0.11566333, -0.13026062);
  dummy_human_meas[10] = reach_lib::Point(0.90152642, 0.11804821, -0.12915271);
  dummy_human_meas[11] = reach_lib::Point(1.01486918e+00, 1.96003328e-04, 1.28757086e+00);
  dummy_human_meas[12] = reach_lib::Point(1.00602804, -0.08150689, 1.19547737);
  dummy_human_meas[13] = reach_lib::Point(1.01062625, 0.07909303, 1.19257031);
  dummy_human_meas[14] = reach_lib::Point(0.96356535, -0.00500442, 1.35256781);
  dummy_human_meas[15] = reach_lib::Point(1.01492849, -0.17241419, 1.22595549);
  dummy_human_meas[16] = reach_lib::Point(1.01972649, 0.17520145, 1.22504534);
  dummy_human_meas[17] = reach_lib::Point(1.04242545, -0.43200882, 1.21304058);
  dummy_human_meas[18] = reach_lib::Point(1.04112379, 0.42889609, 1.21163913);
  dummy_human_meas[19] = reach_lib::Point(1.04352557, -0.68130816, 1.22205866);
  dummy_human_meas[20] = reach_lib::Point(1.04672402, 0.68419556, 1.21945613);
  dummy_human_meas[21] = reach_lib::Point(1.05852663, -0.76531174, 1.21389728);
  dummy_human_meas[22] = reach_lib::Point(1.05702504, 0.76879829, 1.21329518);
  return dummy_human_meas;
}

std::vector<reach_lib::Point> human_measurement_head_scenario() {
  std::vector<reach_lib::Point> dummy_human_meas(23);
  dummy_human_meas[0] = reach_lib::Point(1.0786, -0.0677, 0.3353);
  dummy_human_meas[1] = reach_lib::Point(1.0761, 0.0695, 0.3361);
  dummy_human_meas[2] = reach_lib::Point(1.0985, 0.0043, 0.5356);
  dummy_human_meas[3] = reach_lib::Point(1.08362757, -0.10484137, -0.03962269);
  dummy_human_meas[4] = reach_lib::Point(1.08822514, 0.10909169, -0.04617978);
  dummy_human_meas[5] = reach_lib::Point(1.09739433, -0.0012076, 0.67079964);
  dummy_human_meas[6] = reach_lib::Point(1.11107663, -0.08514985, -0.43881868);
  dummy_human_meas[7] = reach_lib::Point(1.10772773, 0.0932326, -0.44634178);
  dummy_human_meas[8] = reach_lib::Point(1.07197979, -0.00260809, 0.72369264);
  dummy_human_meas[9] = reach_lib::Point(0.98783743, -0.11384181, -0.48389596);
  dummy_human_meas[10] = reach_lib::Point(0.980046, 0.1200125, -0.48063716);
  dummy_human_meas[11] = reach_lib::Point(1.11485195e+00, 1.97000753e-04, 9.37578125e-01);
  dummy_human_meas[12] = reach_lib::Point(1.10602106, -0.08150517, 0.84548301);
  dummy_human_meas[13] = reach_lib::Point(1.11061972, 0.07909477, 0.84257771);
  dummy_human_meas[14] = reach_lib::Point(1.06354908, -0.00500331, 1.00257583);
  dummy_human_meas[15] = reach_lib::Point(1.11492138, -0.17241065, 0.87596658);
  dummy_human_meas[16] = reach_lib::Point(1.11971989, 0.17520109, 0.87505897);
  dummy_human_meas[17] = reach_lib::Point(1.14241904, -0.43200663, 0.86308028);
  dummy_human_meas[18] = reach_lib::Point(1.14111783, 0.42889707, 0.8616792);
  dummy_human_meas[19] = reach_lib::Point(1.14351909, -0.68130614, 0.87209383);
  dummy_human_meas[20] = reach_lib::Point(1.14671798, 0.68419668, 0.86949194);
  dummy_human_meas[21] = reach_lib::Point(1.15851987, -0.76530882, 0.86392285);
  dummy_human_meas[22] = reach_lib::Point(1.15701874, 0.76879873, 0.86332127);
  return dummy_human_meas;
}

std::vector<reach_lib::Point> human_measurement_non_head_scenario() {
  std::vector<reach_lib::Point> dummy_human_meas(23);
  dummy_human_meas[0] = reach_lib::Point(1.1286, -0.0677, 0.9853);
  dummy_human_meas[1] = reach_lib::Point(1.1261, 0.0695, 0.9861);
  dummy_human_meas[2] = reach_lib::Point(1.1485, 0.0043, 1.1856);
  dummy_human_meas[3] = reach_lib::Point(1.13309146, -0.10200292, 0.61010016);
  dummy_human_meas[4] = reach_lib::Point(1.13498742, 0.10780121, 0.60359983);
  dummy_human_meas[5] = reach_lib::Point(1.14739433e+00, -1.20759992e-03, 1.32079964e+00);
  dummy_human_meas[6] = reach_lib::Point(1.17676921, -0.08844074, 0.21209643);
  dummy_human_meas[7] = reach_lib::Point(1.1772661, 0.09204135, 0.20519597);
  dummy_human_meas[8] = reach_lib::Point(1.12197976, -0.00260809, 1.37369264);
  dummy_human_meas[9] = reach_lib::Point(1.05747168, -0.11484298, 0.15629222);
  dummy_human_meas[10] = reach_lib::Point(1.05386821, 0.11744328, 0.15699158);
  dummy_human_meas[11] = reach_lib::Point(1.16485202e+00, 1.96998991e-04, 1.58757810e+00);
  dummy_human_meas[12] = reach_lib::Point(1.15602108, -0.08150517, 1.49548298);
  dummy_human_meas[13] = reach_lib::Point(1.16061975, 0.07909477, 1.49257768);
  dummy_human_meas[14] = reach_lib::Point(1.11354915, -0.00500331, 1.65257581);
  dummy_human_meas[15] = reach_lib::Point(1.16492138, -0.17241066, 1.52596655);
  dummy_human_meas[16] = reach_lib::Point(1.16971991, 0.1752011, 1.52505892);
  dummy_human_meas[17] = reach_lib::Point(1.19241899, -0.43200663, 1.51308012);
  dummy_human_meas[18] = reach_lib::Point(1.19111782, 0.42889707, 1.51167904);
  dummy_human_meas[19] = reach_lib::Point(1.19351899, -0.68130614, 1.52209368);
  dummy_human_meas[20] = reach_lib::Point(1.19671794, 0.68419668, 1.51949178);
  dummy_human_meas[21] = reach_lib::Point(1.20851975, -0.76530884, 1.51392274);
  dummy_human_meas[22] = reach_lib::Point(1.20701868, 0.76879874, 1.51332116);
  return dummy_human_meas;
}

std::vector<std::vector<double>> head_several_pfl_long_term_trajectory() {
  std::vector<std::vector<double>> vec;
  vec.push_back({0.01968465089164353, 0.22404759697568824, -0.006197229078527237, -0.004836844009205369,
                 -0.01677684744107348, -0.022720286994863604});

  vec.push_back({0.04590456390527655, 0.22153519342913464, -0.0037014863016426674, -0.002799724074745286,
                 -0.009552001603730282, -0.012394000286298168});

  vec.push_back({0.08064837469235374, 0.29376940786624983, -0.0012082594939701599, -0.002066555958748196,
                 -0.004719092242653027, -0.009697343248688872});

  vec.push_back({0.13682418600085283, 0.4127632442860408, 0.0028458402131194744, -0.0022098412747478943,
                 0.0025842844282544532, -0.00889530610578008});

  vec.push_back({0.2016587865577908, 0.5150961167791661, 0.005214336095466392, -0.002754541174149359,
                 0.0067613306563977585, -0.009588192890742012});

  vec.push_back({0.27602921513642686, 0.629366481160915, 0.007935051434623053, -0.0035055747281972625,
                 0.011645672524891812, -0.010805338532667687});

  vec.push_back({0.3561250560808831, 0.7306145120075006, 0.01016888951455532, -0.00426997326980645, 0.01568259322604176,
                 -0.012105202148236849});

  vec.push_back({0.44354883436935005, 0.8198582192724438, 0.01271537976339102, -0.004969569802038865,
                 0.020217192544838437, -0.013364648073786586});

  vec.push_back({0.5398611375171933, 0.9019504018015582, 0.01510446158048033, -0.005822071070284021,
                 0.024463497956222116, -0.014898558461264944});

  vec.push_back({0.6311128312517531, 0.9684440022143435, 0.016327335069831948, -0.005673467916442997,
                 0.02673225642945719, -0.016736225617464098});

  vec.push_back({0.7205482390039861, 1.0273765043892307, 0.016044980574895115, -0.0053732787086742066,
                 0.02870306393225428, -0.01793613389237755});

  vec.push_back({0.8028883926145964, 1.0791271957625648, 0.015554741059154628, -0.004914243511073974,
                 0.030106128667932032, -0.017335201495698237});

  vec.push_back({0.8788863330369403, 1.1258610405638678, 0.01507524562212556, -0.004376413188751969,
                 0.031068042345192524, -0.016479743805906704});

  vec.push_back({0.9451120849205449, 1.1683575872338148, 0.014584646253993739, -0.0037315086564996486,
                 0.03042564319894748, -0.01542213061885113});

  vec.push_back({1.0015396270780237, 1.2083476622263516, 0.014109729603018446, -0.0031337648626490076,
                 0.029641688876692846, -0.014417251580561096});

  vec.push_back({1.0451718826144702, 1.2458991051692805, 0.013536840643258335, -0.0025910560025214206,
                 0.02865984805728123, -0.013477827219789759});

  vec.push_back({1.075468322080921, 1.2831310269284733, 0.012998268505082872, -0.00216072122691286,
                 0.027724310900384602, -0.01271881558668885});

  vec.push_back({1.086095786217005, 1.31535286481996, 0.012089216799729768, -0.0018363624365723805,
                 0.026143087650723106, -0.012096378231502756});

  vec.push_back({1.0795604596330517, 1.3445215641639527, 0.011334223993859454, -0.0016689155807690505,
                 0.024822200451206387, -0.011735414845668698});

  vec.push_back({1.05583191288769, 1.3682234583054913, 0.010753874221062668, -0.0016219359314550296,
                 0.023799902482768077, -0.011581245715658255});

  vec.push_back({1.0136085847111247, 1.390099798446196, 0.01065591288137993, -0.0016203150755490282,
                 0.020745653894152866, -0.011516418753297295});

  vec.push_back({0.96155182458865, 1.403402254204399, 0.010519448222845519, -0.0016079512751220252,
                 0.020135651865612992, -0.011478377968025618});

  vec.push_back({0.8898746840732271, 1.4148950831945961, 0.01063254869952471, -0.0015799938491482038,
                 0.020308050991134034, -0.011391290562433008});

  vec.push_back({0.8134348888890653, 1.423435047287692, 0.010611645045275484, -0.001570796867243905,
                 0.02026748129857591, -0.011351465319643967});

  vec.push_back({0.7208570514740698, 1.43106823167638, 0.010674159191898831, -0.0015577664022825627,
                 0.02037889763520232, -0.01126285701839066});

  vec.push_back({0.6236754006582077, 1.4372792280132654, 0.010662876352745881, -0.0015565647867120359,
                 0.02036295959581235, -0.01121466293785316});

  vec.push_back({0.5164387201270269, 1.4428153259301866, 0.010673325817570484, -0.0015577300220024606,
                 0.02038581949113837, -0.01114900692125901});

  vec.push_back({0.4050385930885213, 1.44759266012684, 0.010657216979216688, -0.0015649976098879898,
                 0.02036184412425731, -0.011106108789517037});

  vec.push_back({0.2889402204804987, 1.4518773409067323, 0.010646448600716677, -0.0015755717758495495,
                 0.020347158970639732, -0.01106277686564702});

  vec.push_back({0.1823870400190371, 1.4556263149046598, 0.010612786355406637, -0.0015885499689499883,
                 0.02029158348728709, -0.011046049911832438});

  vec.push_back({0.0870637735354981, 1.4586721812486805, 0.010502008623174394, -0.0015998367803416926,
                 0.0200988345622534, -0.01110924598513333});

  vec.push_back({0.006596323313070446, 1.4612492682225027, 0.010368065235064115, -0.0016066573849577524,
                 0.019860179582871222, -0.011212565293912655});

  vec.push_back({-0.05510104170424432, 1.4632803410214978, 0.010222115494625327, -0.0016092881802579086,
                 0.019596375568265524, -0.011323720197340622});

  vec.push_back({-0.11055673999894908, 1.4655282422510396, 0.010177115175098918, -0.0016109137325481468,
                 0.018462064788262532, -0.01139296984383889});

  vec.push_back({-0.15879160514683008, 1.467183941164667, 0.010131719320426022, -0.0016118142711687457,
                 0.01806425311739701, -0.011415437559017718});

  vec.push_back({-0.17063600426097683, 1.4680452652122071, 0.009999172582443037, -0.001608898518799425,
                 0.017420754009530522, -0.011482662408111488});

  vec.push_back({-0.17901923227671257, 1.4690096988815209, 0.009951796791791395, -0.0016080352958394376,
                 0.016462612623016248, -0.01150873583028189});

  vec.push_back({-0.1839849982570936, 1.4697095935872342, 0.009932815980351905, -0.0016078176595815436,
                 0.01574592803576557, -0.011516177462555736});

  vec.push_back({-0.1898229255832799, 1.4698558215687345, 0.009923155124146226, -0.0016077614934860416,
                 0.015318556502561604, -0.011517823547733053});

  vec.push_back({-0.193313758705092, 1.470252453587746, 0.009919495946395143, -0.0016077218027277095,
                 0.015067953297583722, -0.011518665568633072});

  vec.push_back({-0.19980196929042673, 1.4702563866883973, 0.00991485051131793, -0.00160769194479064,
                 0.015358910386621452, -0.011518826996791149});

  vec.push_back({-0.2021699592963629, 1.4706225914040063, 0.009914971558718118, -0.0016076659390847805,
                 0.015196813343549661, -0.011519323786303815});

  vec.push_back({-0.2079964831054687, 1.4708289460527175, 0.009916312071333765, -0.001607643345322058,
                 0.015206785317521315, -0.011519174062916856});

  vec.push_back({-0.21071399572730043, 1.4712073630158993, 0.009915697870337215, -0.001607632643601686,
                 0.01523715051976347, -0.01151946191892334});

  vec.push_back({-0.20495369874670324, 1.4711743638108037, 0.009914774793863134, -0.0016076160404671132,
                 0.01522073925217009, -0.011519333517691351});

  vec.push_back({-0.17985474829351172, 1.4715194525536288, 0.009916209633512193, -0.0016075945764072418,
                 0.014826581987662277, -0.011519595619724179});

  vec.push_back({-0.15469855960225384, 1.4715508741836698, 0.009915609605552003, -0.0016075799332860032,
                 0.014851588422210455, -0.011519388663877271});

  vec.push_back({-0.12508440060254825, 1.471978173895482, 0.009917042368694133, -0.0016075682310659415,
                 0.014457133385476148, -0.011519612017787525});

  vec.push_back({-0.0846002395612819, 1.4716750404655947, 0.009908995960609502, -0.0016074969361350717,
                 0.014623785123977195, -0.01152169662240606});

  vec.push_back({-0.05204450342615474, 1.4721070145813333, 0.009913531226802382, -0.0016074274594493634,
                 0.01437764738444427, -0.011521160988296978});

  vec.push_back({0.0036243201838284536, 1.470449298699449, 0.00984778319773427, -0.0016068428783770773,
                 0.015195521939904222, -0.011534196430726602});

  vec.push_back({0.05085239138359155, 1.4696616298871978, 0.009852799185905346, -0.0016066153976855477,
                 0.015536477015683833, -0.011533344062834796});

  vec.push_back({0.08934443797910538, 1.4726662338020327, 0.0099136875327001, -0.0016062784697875952,
                 0.01387877657144566, -0.011524632639786352});

  vec.push_back({0.14832193321694304, 1.4749033976757424, 0.009972063525973317, -0.0016059545762712978,
                 0.014098973430541065, -0.011537714877087466});

  vec.push_back({0.20037616724721102, 1.4765614971999095, 0.009975241329393819, -0.0016055950246682226,
                 0.013601934018980601, -0.011538218838030152});

  vec.push_back({0.23940412780300824, 1.4781390273264818, 0.009962172898160067, -0.0016054420368709812,
                 0.012856024595793842, -0.011532092087945384});

  vec.push_back({0.3028141945134487, 1.4794666215928116, 0.009979139398523263, -0.0016042888443341546,
                 0.012646900601585697, -0.011554899325309445});

  vec.push_back({0.35461573656556994, 1.4802841998015046, 0.009957695172389657, -0.001604453250043459,
                 0.012554222858047193, -0.011551365800523674});

  vec.push_back({0.4027493576090182, 1.4809073062722304, 0.009942383553439486, -0.0016044529174100148,
                 0.012514948553041163, -0.011552870145107993});

  vec.push_back({0.4434566406684443, 1.4821287381842656, 0.009947820134748122, -0.0016038784106076165,
                 0.01252217800722141, -0.011547041549719812});

  vec.push_back({0.49501992800314437, 1.4833804288501657, 0.0099711317140871, -0.0016006060097402569,
                 0.012558468522024779, -0.011573377758795663});

  vec.push_back({0.530180630835838, 1.4839058566043835, 0.009943953288124422, -0.00160242026574144,
                 0.012513700804558537, -0.011555582004131941});

  vec.push_back({0.6036353361367388, 1.484755071907831, 0.009943844307857925, -0.0015943987642374924,
                 0.012507850848046776, -0.011601989835335755});

  vec.push_back({0.68210595484578, 1.484748067276635, 0.009883213483367402, -0.0015813576288644573,
                 0.012394903246658583, -0.011674283566946584});

  vec.push_back({0.7669633846267696, 1.4847037729130892, 0.009826918640110293, -0.0015699456167655626,
                 0.012289738491165344, -0.011742964978647543});

  vec.push_back({0.8277805264790589, 1.4846812440072898, 0.009830461683944356, -0.0015780591080661506,
                 0.012296844781429981, -0.011702995111386321});

  vec.push_back({0.8847804414144393, 1.48467394047301, 0.009834783475337986, -0.0015815010373101633,
                 0.012304768810843707, -0.011683988121389852});

  vec.push_back({0.9185871733405601, 1.484660682950345, 0.009856412025770346, -0.001589879276713736,
                 0.012347982289859408, -0.0116327929916686});

  vec.push_back({0.9417272227525926, 1.4846518726174207, 0.009871976013111693, -0.0015949165344392546,
                 0.012379288941453617, -0.011600177194645924});

  vec.push_back({0.9342053523401462, 1.4846395011099442, 0.009894730565811596, -0.001601926691456317,
                 0.012425684457515577, -0.011553971971486743});

  vec.push_back({0.9156548863419924, 1.4846339878388886, 0.009905050445130906, -0.0016048080209315086,
                 0.012446806611701557, -0.01153411142698119});

  vec.push_back({0.8690353239013116, 1.4846299089814283, 0.009912588355331715, -0.0016070445502296936,
                 0.012462225009791985, -0.011518487700296754});

  vec.push_back({0.8336722544526225, 1.4846298329777456, 0.009912926924619526, -0.0016071692746020571,
                 0.012463038888620393, -0.011518340438717047});

  vec.push_back({0.7602405173991471, 1.4846229396796087, 0.009925052067951776, -0.001611737215209357,
                 0.012487544431918364, -0.011489594442411849});

  vec.push_back({0.6754345890475563, 1.4846151200495779, 0.009938888619820853, -0.001617075028991945,
                 0.012515655218091387, -0.011456515183170826});

  vec.push_back({0.5802731548975959, 1.4846071743684517, 0.009953068989950103, -0.0016223120072764573,
                 0.01254448838618101, -0.011423594677143972});

  vec.push_back({0.47789646457271473, 1.4845996762679743, 0.009966517365404806, -0.0016271763016281811,
                 0.012571892368484194, -0.011392604033725743});

  vec.push_back({0.3688105362966949, 1.484591957936671, 0.009980353514027936, -0.001632203733695127,
                 0.012600118341887654, -0.01136037308215957});

  vec.push_back({0.2555926651860886, 1.4845848764931693, 0.009993113585751293, -0.0016367198502975637,
                 0.012626223006197843, -0.011330738992782748});

  vec.push_back({0.14678038826135503, 1.4845805973052577, 0.010001093467442237, -0.0016390507488555366,
                 0.012642721732346818, -0.01131362108013536});

  vec.push_back({0.06856846980287334, 1.4845902255546095, 0.009985173345602007, -0.0016312919770576778,
                 0.012610781838868735, -0.011359444700058997});

  vec.push_back({0.002719428857195616, 1.4846011153349958, 0.009966239132048992, -0.0016236137030475183,
                 0.012572391371300187, -0.011407257336108274});

  vec.push_back({-0.06978606016215302, 1.4846039734434242, 0.009960819896748649, -0.0016222854214438896,
                 0.012561324509921479, -0.011416873271279833});

  vec.push_back({-0.1147059893636864, 1.484611396788748, 0.009947187255774962, -0.0016183266551904238,
                 0.012533639301950205, -0.01144461371814718});

  vec.push_back({-0.12516083568108607, 1.484624065087022, 0.009924032074010793, -0.0016108669331906065,
                 0.012486117367421112, -0.011496117863082848});

  vec.push_back({-0.13970505539447942, 1.4846279728052172, 0.009916773878778828, -0.001608813574848755,
                 0.012471219926554693, -0.011511066353696088});

  vec.push_back({-0.14670314555283265, 1.4846294309177057, 0.009914003516787897, -0.001608130853605342,
                 0.012465502688189859, -0.01151641574121284});

  vec.push_back({-0.1538038524954981, 1.484629838058862, 0.009913218515912231, -0.0016079414346402369,
                 0.012463863024114816, -0.0115179716097959});

  vec.push_back({-0.1565780582795817, 1.4846300954160534, 0.009912729390740716, -0.001607820853027567,
                 0.012462844791772277, -0.011518984797425112});

  vec.push_back({-0.1620176755338471, 1.4846301374398443, 0.00991264011893533, -0.0016077900935774082,
                 0.012462644772917695, -0.011519190385387679});

  vec.push_back({-0.17001193249990823, 1.4846300185046355, 0.009912786760503216, -0.0016077689181517528,
                 0.012462912911986146, -0.011518936586993236});

  vec.push_back({-0.17295994528497868, 1.4846301300709825, 0.009912599503613588, -0.0016077417523083827,
                 0.012462533235023608, -0.011519296042449684});

  vec.push_back({-0.17156056090206234, 1.4846304110201747, 0.009912103303575732, -0.0016075954200777533,
                 0.012461534006674067, -0.01152041959849442});

  vec.push_back({-0.16475150161158278, 1.4846305627876248, 0.009911813811462448, -0.0016075014919648925,
                 0.01246094889574336, -0.011521076115532465});

  vec.push_back({-0.1360275029928149, 1.4846331359629779, 0.009907246342862552, -0.0016059198135805412,
                 0.012451655547975192, -0.011531832445547676});

  vec.push_back({-0.10092076762816776, 1.484632687235633, 0.009907938994542547, -0.0016058229547657587,
                 0.012452983906911292, -0.01153028068237098});

  vec.push_back({-0.06849682162213411, 1.484631238440611, 0.009910450661506335, -0.0016062362610867278,
                 0.012458052485893493, -0.011524569485023195});

  vec.push_back({-0.03947829312408725, 1.4846306556358244, 0.009911482291167804, -0.0016064211579565391,
                 0.012460141790210062, -0.011522257143992354});

  vec.push_back({-0.015769982982484693, 1.484630113031912, 0.009912464003743696, -0.001606693020443287,
                 0.01246215085218542, -0.011519975686996439});

  vec.push_back({0.00519981781697209, 1.4846294498342265, 0.009913668111328069, -0.0016070813668098156,
                 0.012464617504734559, -0.011517200827731467});

  vec.push_back({0.024219259898713864, 1.4846288339325775, 0.009914787653156803, -0.00160745020403441,
                 0.012466907942826276, -0.011514669048917106});

  vec.push_back({0.04137816053339, 1.4846282924351415, 0.009915773402781608, -0.0016077758093482203,
                 0.012468924139711197, -0.011512465536587257});

  vec.push_back({0.05676576028733516, 1.4846278706069111, 0.009916543920537977, -0.0016080255367580706,
                 0.012470500141045346, -0.01151077315131845});

  vec.push_back({0.07075394833933896, 1.4846276520537742, 0.009916947714456793, -0.0016081491923842146,
                 0.012471327164277691, -0.011509923120175711});

  vec.push_back({0.08357506191893295, 1.4846276054333574, 0.009917051087636986, -0.0016081882074966299,
                 0.012471543092568402, -0.011509704312951398});

  vec.push_back({0.09545465679525322, 1.48462773021052, 0.00991690331315035, -0.0016081962484514785,
                 0.012471286583929944, -0.011509896432269667});

  vec.push_back({0.09364396945646428, 1.484628096286087, 0.009916322513306533, -0.001608198337445527,
                 0.012470152782501126, -0.01151104326308175});

  vec.push_back({0.07635803677947421, 1.4846285530999188, 0.009915515206565084, -0.0016081942754963036,
                 0.012468516771736908, -0.01151279330909017});

  vec.push_back({0.0623712097560456, 1.4846290387118022, 0.00991463496192747, -0.001608166122391916,
                 0.012466719444263396, -0.011514718214099077});

  vec.push_back({0.08058330065343894, 1.4846313387954202, 0.00991051082173871, -0.0016069569205736695,
                 0.012458338380975664, -0.011524215057410362});

  vec.push_back({0.14670505468557477, 1.4846444122541398, 0.009887607441846791, -0.0015973464462411368,
                 0.012411750650599674, -0.011582506864764955});

  vec.push_back({0.16455852688698705, 1.4846382844943005, 0.009898022154409072, -0.0016016326053033473,
                 0.012432755511912095, -0.011554797475896373});

  vec.push_back({0.17499218078658052, 1.4846329676613492, 0.009907338255134634, -0.0016050821991088573,
                 0.01245171121451405, -0.011531704549458554});

  vec.push_back({0.22070309065041066, 1.4846372336155702, 0.009899795280692937, -0.0016027946148121745,
                 0.012436381196950591, -0.011549269485407805});

  vec.push_back({0.2622134343118699, 1.4846392954156375, 0.009896077246801931, -0.001601561900789459,
                 0.01242874817837485, -0.011557905509098508});

  vec.push_back({0.28545517974927137, 1.484635515048028, 0.009902634136816472, -0.0016037853130262136,
                 0.012442059264751714, -0.01154159842467531});

  vec.push_back({0.3017359513630173, 1.4846331352498603, 0.009906892733209686, -0.0016051142702183281,
                 0.012450730144347543, -0.011531945549696634});

  vec.push_back({0.31008527663015983, 1.4846315510030623, 0.009909801493098103, -0.0016059624359998207,
                 0.012456679607041051, -0.011525767265072711});

  vec.push_back({0.3127798254579326, 1.4846311241902903, 0.009910618224480647, -0.0016062146188163865,
                 0.012458369344155736, -0.011524107784628155});

  vec.push_back({0.30330708319152994, 1.4846318282065478, 0.009909441862265233, -0.0016061739138625516,
                 0.012456000979503758, -0.011526740598583754});

  vec.push_back({0.28190278785931916, 1.4846312122691536, 0.009910487917689286, -0.001606264701380529,
                 0.012458104046835875, -0.011524501352850876});

  vec.push_back({0.2551985683585047, 1.4846307658684181, 0.009911285949150259, -0.0016063890044112142,
                 0.012459739657204805, -0.011522726864885806});

  vec.push_back({0.23570080966871765, 1.4846311938570833, 0.009910619373562145, -0.0016063909847303791,
                 0.012458433200787834, -0.011524030973319261});

  vec.push_back({0.21174984388103954, 1.4846312516707196, 0.009910503206218422, -0.0016063960904477213,
                 0.012458187778006892, -0.011524302301663082});

  vec.push_back({0.18482418224271663, 1.4846310373038984, 0.009910836034978112, -0.0016064089457880823,
                 0.01245884604527918, -0.011523648356284465});

  vec.push_back({0.16202466930102422, 1.484631512460571, 0.00991003262902766, -0.0016064019473244616,
                 0.012457226238651866, -0.011525385429796866});

  vec.push_back({0.11690854853343051, 1.484630117097698, 0.009912460337210834, -0.0016069210295878255,
                 0.012462123124325172, -0.01151992637716327});

  vec.push_back({0.04468646900544411, 1.4846236323600528, 0.00992395582903255, -0.0016112222350335107,
                 0.012485549379509006, -0.011491967321954769});

  vec.push_back({-0.008654481485149496, 1.4846246048311649, 0.009922413210639847, -0.001610832060079057,
                 0.012482524438071924, -0.011496118902114424});

  vec.push_back({-0.04278110728334801, 1.4846285188513049, 0.009915516642128402, -0.0016086463459359592,
                 0.012468485619704045, -0.01151263519125038});

  vec.push_back({-0.07809519392699378, 1.4846297148428356, 0.009913368107363261, -0.001607997883790528,
                 0.01246408844519165, -0.0115175698457455});

  vec.push_back({-0.1124418626231061, 1.4846287759669758, 0.009914967278432808, -0.0016080654452710823,
                 0.012467316869555293, -0.011514050065239803});

  vec.push_back({-0.11742120907582106, 1.4846295719378673, 0.009913602254650114, -0.0016079068771517261,
                 0.012464571541872443, -0.011517030117430542});

  vec.push_back({-0.11443246741014576, 1.4846301592001567, 0.009912566022594405, -0.0016077555637501399,
                 0.012462464310083965, -0.011519359550248996});

  vec.push_back({-0.12197603660422207, 1.4846301099141954, 0.009912626753075679, -0.0016077353524499819,
                 0.012462567059663726, -0.011519267571430063});

  vec.push_back({-0.1359947634031475, 1.4846294750265343, 0.009913702703616595, -0.001607792217494281,
                 0.012464739477439982, -0.011516880323298463});

  vec.push_back({-0.14383296548870228, 1.4846298084664198, 0.009913155433301709, -0.0016077690868578367,
                 0.01246364078464289, -0.011518070184278847});

  vec.push_back({-0.18470946049004228, 1.484625503885847, 0.009920740742344112, -0.0016100538480085063,
                 0.012479043605466634, -0.011500199939019792});

  vec.push_back({-0.23914775618459738, 1.4846192356437475, 0.009931853520571682, -0.001614189375184245,
                 0.012501709528698288, -0.011473235809615576});

  vec.push_back({-0.28435424853159563, 1.4846189942990047, 0.00993254694315594, -0.0016142487302076107,
                 0.012503207756794832, -0.011473283304780809});

  vec.push_back({-0.3131469424956087, 1.4846234045344116, 0.00992490843481849, -0.0016115078286066773,
                 0.012487699916103167, -0.011492554730715856});

  vec.push_back({-0.3295239305194669, 1.4846269797339142, 0.009918468850954355, -0.0016094336538267997,
                 0.012474568605511147, -0.011507052687856203});

  vec.push_back({-0.34152225764434474, 1.4846289527709005, 0.009914833731037966, -0.0016083705915331027,
                 0.01246712528500673, -0.01151472079286804});

  vec.push_back({-0.3384227904781345, 1.4846293634160561, 0.009914059694662513, -0.0016081917562001309,
                 0.012465551574876952, -0.011516120360505422});

  vec.push_back({-0.32309660475617463, 1.4846296947114357, 0.009913423137804725, -0.0016079894409847446,
                 0.012464227698553288, -0.011517453463166598});

  vec.push_back({-0.3090282832679881, 1.4846291980337207, 0.009914248098310327, -0.001608000492528279,
                 0.012465870355963384, -0.011515643128395845});

  vec.push_back({-0.28524815424986244, 1.484629704728735, 0.009913388030141967, -0.0016079186855655302,
                 0.01246414754792428, -0.011517479413397516});

  vec.push_back({-0.25955076248480297, 1.4846299680640591, 0.009912903760816846, -0.0016078126176011227,
                 0.012463145877537756, -0.011518591381722874});

  vec.push_back({-0.24250182432732045, 1.4846288549552393, 0.009914813443727185, -0.0016079737424887612,
                 0.01246701073020278, -0.011514338278909086});

  vec.push_back({-0.21533231747019577, 1.48462942280489, 0.009913873654571602, -0.0016079308657339405,
                 0.012465135150545708, -0.011516393870352165});

  vec.push_back({-0.1822996786367964, 1.4846300353743296, 0.009912793558913073, -0.001607791491335693,
                 0.012462935224118132, -0.011518804114976008});

  vec.push_back({-0.13211451191330312, 1.484631571893919, 0.009910048471544818, -0.0016069201528445716,
                 0.01245736013733421, -0.0115251561742834});

  vec.push_back({-0.061253979007654974, 1.4846370779388276, 0.009900245043585066, -0.0016032115162382878,
                 0.01243738117256688, -0.01154875483996951});

  vec.push_back({-0.0064360477859644605, 1.484636685653881, 0.009900789114217412, -0.001603178360508811,
                 0.01243838296201517, -0.011547220804869394});

  vec.push_back({0.02452458411203101, 1.4846323883232784, 0.009908372615910316, -0.0016055097208946493,
                 0.012453806305473155, -0.011529257406524836});

  vec.push_back({0.056489989877943514, 1.4846309888236189, 0.00991087874563765, -0.001606235056027591,
                 0.012458914962843917, -0.011523572006430997});

  vec.push_back({0.08528866484996313, 1.4846316964595896, 0.009909706258934387, -0.0016062108900627731,
                 0.012456575797106451, -0.01152606317179293});

  vec.push_back({0.09851472262358148, 1.4846317987831932, 0.009909499389002213, -0.0016061484224381447,
                 0.012456126942581466, -0.011526633569999348});

  vec.push_back({0.09521623453309343, 1.4846308795206349, 0.009911092633758833, -0.0016063702781744325,
                 0.012459350352917242, -0.011523098198976801});

  vec.push_back({0.09692076885539616, 1.484630621244019, 0.009911555585807443, -0.0016064555683352783,
                 0.012460303086699894, -0.011522047217029468});

  vec.push_back({0.11001395314010211, 1.4846310913423113, 0.0099107899257347, -0.0016064557569367044,
                 0.012458775720384268, -0.01152367354824045});

  vec.push_back({0.11016929953140267, 1.4846307484915817, 0.009911344000425181, -0.0016064672552531043,
                 0.012459871791667099, -0.011522550661619375});

  vec.push_back({0.11575426694958828, 1.4846306785539973, 0.009911468193059849, -0.001606476312259668,
                 0.01246012746759804, -0.011522269704446086});

  vec.push_back({0.12683573969459977, 1.4846310224014725, 0.009910903849982545, -0.0016064784648290077,
                 0.012458998415526204, -0.01152346411394957});

  vec.push_back({0.1282884250903849, 1.4846307094340498, 0.009911408207140891, -0.0016064896398855434,
                 0.012459998947120163, -0.011522432427321257});

  vec.push_back({0.13508842051531073, 1.4846306748814706, 0.009911478338880276, -0.0016065004629677697,
                 0.01246013496147354, -0.011522283248735866});

  vec.push_back({0.14575369892073298, 1.4846309630234968, 0.009911023384528065, -0.001606504237074267,
                 0.012459234162383289, -0.011523203357274232});

  vec.push_back({0.15540050168156114, 1.484630954320793, 0.009911006081846255, -0.0016065011806020268,
                 0.012459201486710779, -0.011523256751335184});

  vec.push_back({0.19808222481527094, 1.4846357512892991, 0.009902546182719463, -0.0016038601210861913,
                 0.012442028981338615, -0.011543220085299469});

  vec.push_back({0.23613533383979868, 1.4846428409971406, 0.009889986399600979, -0.0015991399592688725,
                 0.012416471958372682, -0.011573471727215989});

  vec.push_back({0.24629172285440987, 1.4846429082464105, 0.009889560376393117, -0.0015992637869690868,
                 0.012415523303998303, -0.011572302311858736});

  vec.push_back({0.24160455286267757, 1.4846381844077796, 0.009897725003133389, -0.0016022752011405708,
                 0.012432071167108604, -0.01155166480198065});

  vec.push_back({0.23053881465264486, 1.4846353211552894, 0.009902858801658934, -0.0016039124179393286,
                 0.012442499667871322, -0.011540216950983711});

  vec.push_back({0.21454992570976694, 1.4846337905566362, 0.009905671528444696, -0.0016046944346602243,
                 0.012448218071215414, -0.011534545777107283});

  vec.push_back({0.19253386010465573, 1.484632385119916, 0.00990826154380536, -0.0016054748849331593,
                 0.012453514855462903, -0.011529119931266955});

  vec.push_back({0.167377243660841, 1.4846316989581074, 0.009909533752503285, -0.001605837357101843,
                 0.012456116256498787, -0.011526529929388496});

  vec.push_back({0.12623908408514317, 1.4846304973764464, 0.009911722716468755, -0.0016065088462368488,
                 0.012460584945686911, -0.011521665543076272});

  vec.push_back({0.05003334739521764, 1.4846224656794542, 0.009925935026037565, -0.0016120939580264062,
                 0.01248951369164233, -0.011486813978807795});

  vec.push_back({-0.0039638813927251465, 1.4846236491793017, 0.00992405260683269, -0.0016115384992623255,
                 0.01248583305641959, -0.011491867597033419});

  vec.push_back({-0.03845976925012916, 1.4846282545085516, 0.00991597709629467, -0.0016088187908396498,
                 0.012469412817577118, -0.011511532922159829});

  vec.push_back({-0.0762673791131009, 1.484629495427527, 0.009913754570527109, -0.0016080903341297414,
                 0.012464867508786684, -0.01151673927326473});

  vec.push_back({-0.1089804497099132, 1.4846285601029214, 0.00991537514211647, -0.0016083621377844168,
                 0.012468163291890834, -0.01151303079592048});

  vec.push_back({-0.11107485684585036, 1.4846296719275989, 0.009913428190118494, -0.0016079655884272935,
                 0.012464214012052065, -0.011517415882066716});

  vec.push_back({-0.1181109314120505, 1.4846299652944641, 0.009912924935417127, -0.0016078700395206259,
                 0.012463203406446351, -0.011518505187230086});

  vec.push_back({-0.12590224837302613, 1.4846300558543848, 0.009912745558389967, -0.0016078072648766806,
                 0.012462826306378847, -0.011518924301391637});

  vec.push_back({-0.13729703172565164, 1.484629798761174, 0.009913151411418596, -0.0016078016020224576,
                 0.012463622490881022, -0.011518108265697404});

  vec.push_back({-0.14096197239100008, 1.484630059569937, 0.009912734059488683, -0.0016077671166773969,
                 0.0124628019533421, -0.011518947848404612});

  vec.push_back({-0.1471215724699031, 1.484630142601549, 0.00991257765953937, -0.00160773901127166,
                 0.012462475081407205, -0.011519322897312834});

  vec.push_back({-0.15954673282064225, 1.4846297295459707, 0.009913253118693668, -0.0016077371768523235,
                 0.012463822810977018, -0.011517912307956447});

  vec.push_back({-0.17727781509572624, 1.4846292409163573, 0.009914127326059768, -0.0016078693785982162,
                 0.012465589008897483, -0.011515983830665467});

  vec.push_back({-0.22623800169839245, 1.4846230822671154, 0.009925000055995033, -0.0016116391446722744,
                 0.012487706194384367, -0.011489766150488776});

  vec.push_back({-0.2830701756032773, 1.4846172228893615, 0.009935439895782229, -0.0016155245531192877,
                 0.012509018318950408, -0.011464737517504759});

  vec.push_back({-0.32420948705435587, 1.4846192196368713, 0.0099322477006999, -0.0016141574586787868,
                 0.012502627731719928, -0.011474553569374771});

  vec.push_back({-0.33514101536437263, 1.4846244726348794, 0.009923012070219141, -0.00161083636663143,
                 0.012483824338874244, -0.011497147607678865});

  vec.push_back({-0.3285046351057062, 1.4846266427955983, 0.009919087080369898, -0.0016096559584827229,
                 0.012475840103037645, -0.01150563926715624});

  vec.push_back({-0.3089149102138933, 1.484628804836391, 0.009915109098348415, -0.001608473592024384,
                 0.012467702047091155, -0.01151406261330892});

  vec.push_back({-0.2853383124562449, 1.4846297563161346, 0.009913329300952886, -0.0016079698014471264,
                 0.012464036458290167, -0.011517770098261888});

  vec.push_back({-0.26828773768938885, 1.4846291371496683, 0.009914347038341223, -0.001607976751971807,
                 0.012466084617284448, -0.011515492816934413});

  vec.push_back({-0.24391516407515942, 1.4846294039122399, 0.00991391124253786, -0.001607957488140047,
                 0.012465223111934053, -0.0115163633140358});

  vec.push_back({-0.2139206459000611, 1.484629907037007, 0.00991301884032993, -0.0016078381398120316,
                 0.012463391573816896, -0.011518329486418679});
  return vec;
}

int main() {
  double sample_time = 0.001;
  std::string trajectory_config_file = std::string("../config/trajectory_parameters_schunk.yaml");
  std::string robot_config_file = std::string("../config/robot_parameters_schunk.yaml");
  std::string mocap_config_file =
      std::string("../config/cmu_mocap_no_hand.yaml");  // std::string("../config/mujoco_mocap.yaml");
  double init_x = 0.0;
  double init_y = 0.0;
  double init_z = 0.0;
  double init_roll = 0.0;
  double init_pitch = 0.0;
  double init_yaw = 0.0;
  std::vector<double> init_qpos = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  safety_shield::ShieldType shield_type = safety_shield::ShieldType::SEVERAL_PFL;

  safety_shield::SafetyShield shield =
      safety_shield::SafetyShield(sample_time, trajectory_config_file, robot_config_file, mocap_config_file, init_x,
                                  init_y, init_z, init_roll, init_pitch, init_yaw, init_qpos, shield_type);

  auto qpos_vec = head_several_pfl_long_term_trajectory();

  // TODO: how to correctly increment t
  // n = shield_frequency / RL_frequency
  spdlog::info("Debug started.");
  double t = 0.0;
  for (int ep = 0; ep < 1; ep++) {
    for (int i = 0; i < 1000; i++) {
      t += 0.001;
      shield.humanMeasurement(human_measurement_head_scenario(), t);
      t += 0.003;
      if (i % 5 == 0) {
        shield.newLongTermTrajectory(qpos_vec[i / 5], {0.0, 0.0, 0.0, 0.0, 0.0, 0.0});
      }
      safety_shield::Motion next_motion = shield.step(t);
    }
    shield.reset(init_x, init_y, init_z, init_roll, init_pitch, init_yaw, init_qpos, t, shield_type);
  }
  spdlog::info("Debug finished.");
  return 0;
}